<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>sprout-algo-w4</title>
    <url>/0cy/sprout-algo-w4/</url>
    <content><![CDATA[<h1 id="課程內容"><a href="#課程內容" class="headerlink" title="課程內容"></a>課程內容</h1><h2 id="枚舉-Enumeration"><a href="#枚舉-Enumeration" class="headerlink" title="枚舉 Enumeration"></a>枚舉 Enumeration</h2><ul>
<li>枚舉排列 Enumerate Permutation</li>
<li>枚舉子集 Enumerate Subset<ul>
<li>位元枚舉 Bitmask Enumeration</li>
</ul>
</li>
</ul>
<h2 id="搜尋-Search"><a href="#搜尋-Search" class="headerlink" title="搜尋 Search"></a>搜尋 Search</h2><ul>
<li><p>DFS &amp; BFS</p>
</li>
<li><p>跌代加深的深度優先搜尋 Iterative Deepening Depth-First Search，簡稱 IDDFS</p>
</li>
<li><p>雙向廣度優先搜尋 Bi-directional BFS</p>
</li>
<li><p>剪枝 Pruning</p>
<ul>
<li><p><a href="https://cses.fi/problemset/task/1624">Chessboard and Queens</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 紀錄第 i 行的皇后放置在哪一個座標 (i, y[i])</span></span><br><span class="line"><span class="type">int</span> x[<span class="number">10</span>]; </span><br><span class="line"><span class="type">int</span> y[<span class="number">10</span>]; </span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> col[<span class="number">15</span>]; <span class="comment">// 某一列 j 是否已經放置過皇后</span></span><br><span class="line"><span class="type">bool</span> diag1[<span class="number">15</span>]; <span class="comment">// 左上到右下對角線是否有皇后</span></span><br><span class="line"><span class="type">bool</span> diag2[<span class="number">15</span>]; <span class="comment">// 右上到左下對角線是否有皇后</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (i == <span class="number">8</span>) &#123;</span><br><span class="line">		ans++;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">8</span>; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;.&#x27;</span> &amp;&amp; col[j] == <span class="literal">false</span> &amp;&amp; diag1[i + j] == <span class="literal">false</span> &amp;&amp; diag2[i - j + <span class="number">7</span>] == <span class="literal">false</span>) &#123;</span><br><span class="line">				x[i] = i, y[i] = j;</span><br><span class="line">				col[j] = diag1[i + j] = diag2[i - j + <span class="number">7</span>] = <span class="literal">true</span>;</span><br><span class="line">				<span class="built_in">dfs</span>(i + <span class="number">1</span>);</span><br><span class="line">				col[j] = diag1[i + j] = diag2[i - j + <span class="number">7</span>] = <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">8</span>; j++) &#123;</span><br><span class="line">			cin &gt;&gt; a[i][j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="https://cses.fi/problemset/task/1625">Grid Paths</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line">string path;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">char</span> dir[<span class="number">4</span>] = &#123; <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;L&#x27;</span> &#125;;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> v[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (i == <span class="number">48</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (x == <span class="number">7</span> &amp;&amp; y == <span class="number">1</span>) &#123;</span><br><span class="line">			ans++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (x == <span class="number">7</span> &amp;&amp; y == <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ((v[x - <span class="number">1</span>][y] &amp;&amp; v[x + <span class="number">1</span>][y]) &amp;&amp; (!v[x][y - <span class="number">1</span>] &amp;&amp; !v[x][y + <span class="number">1</span>])) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> ((!v[x - <span class="number">1</span>][y] &amp;&amp; !v[x + <span class="number">1</span>][y]) &amp;&amp; (v[x][y - <span class="number">1</span>] &amp;&amp; v[x][y + <span class="number">1</span>])) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	v[x][y] = <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">if</span> (path[i] != <span class="string">&#x27;?&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> d = <span class="number">0</span>; d &lt; <span class="number">4</span>; d++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (path[i] == dir[d]) &#123;</span><br><span class="line">                <span class="type">int</span> nx = x + dx[d], ny = y + dy[d];</span><br><span class="line">                <span class="keyword">if</span> (!v[nx][ny]) &#123;</span><br><span class="line">                    <span class="built_in">dfs</span>(nx, ny, i + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> d = <span class="number">0</span>; d &lt; <span class="number">4</span>; d++) &#123;</span><br><span class="line">            <span class="type">int</span> nx = x + dx[d], ny = y + dy[d];</span><br><span class="line">            <span class="keyword">if</span> (!v[nx][ny]) &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(nx, ny, i + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    v[x][y] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cin &gt;&gt; path;</span><br><span class="line">	<span class="built_in">memset</span>(v, <span class="literal">false</span>, <span class="built_in">sizeof</span>(v));</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">        v[<span class="number">0</span>][i] = v[<span class="number">8</span>][i] = v[i][<span class="number">0</span>] = v[i][<span class="number">8</span>] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">1</span>][<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>二分搜 Binary Search</p>
</li>
<li><p>三分搜 Ternary Search</p>
</li>
</ul>
<hr>
<h1 id="上機作業"><a href="#上機作業" class="headerlink" title="上機作業"></a>上機作業</h1><p>$2260 / 2400$</p>
<h2 id="pA-500-500"><a href="#pA-500-500" class="headerlink" title="pA 500 / 500"></a>pA 500 / 500</h2><p>模擬 + 回溯。</p>
<h2 id="pB-500-500"><a href="#pB-500-500" class="headerlink" title="pB 500 / 500"></a>pB 500 / 500</h2><p>枚舉組合。</p>
<h2 id="pC-500-500"><a href="#pC-500-500" class="headerlink" title="pC 500 / 500"></a>pC 500 / 500</h2><p>二分搜找訓練天數後用貪心去 check。</p>
<h2 id="pD-500-500"><a href="#pD-500-500" class="headerlink" title="pD 500 / 500"></a>pD 500 / 500</h2><p>三分搜裸題。</p>
<h2 id="pE-060-200"><a href="#pE-060-200" class="headerlink" title="pE 060 / 200"></a>pE 060 / 200</h2><p>二分搜找破關所需的最短時間，但我不知怎麼求跑的距離QQ。</p>
<h2 id="pF-200-200"><a href="#pF-200-200" class="headerlink" title="pF 200 / 200"></a>pF 200 / 200</h2><p>二分搜找工作量上限後用貪心去 check。</p>
<hr>
<h1 id="手寫作業"><a href="#手寫作業" class="headerlink" title="手寫作業"></a>手寫作業</h1><p>等分數出來再更新。</p>
<hr>
<h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><p>新學到了三分搜，剪枝和位元枚舉也了解的更透徹，還有我不會寫心得。</p>
]]></content>
      <categories>
        <category>資訊</category>
      </categories>
      <tags>
        <tag>資訊之芽</tag>
      </tags>
  </entry>
  <entry>
    <title>2025 入芽考</title>
    <url>/0cy/%E5%85%A5%E8%8A%BD%E8%80%83%E9%A1%8C%E8%A7%A3/</url>
    <content><![CDATA[<p>題目都放在 <a href="https://tioj.sprout.tw/">Sprout Online Judge</a></p>
<h1 id="A-芽芽來排序"><a href="#A-芽芽來排序" class="headerlink" title="A. 芽芽來排序"></a>A. 芽芽來排序</h1><p>$100/100$</p>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>這題測資小，直接暴力就好ㄌ。</p>
<h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; b = a;</span><br><span class="line">    <span class="built_in">sort</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a == b) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; result;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != b[i]) &#123;</span><br><span class="line">            <span class="type">int</span> j = i;</span><br><span class="line">            <span class="keyword">for</span> (; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[j] == b[i]) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> tmp = a[i];</span><br><span class="line">            a[i] = a[j];</span><br><span class="line">            a[j] = tmp;</span><br><span class="line">            result.<span class="built_in">push_back</span>(&#123;i, j&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; result.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : result) &#123;</span><br><span class="line">        cout &lt;&lt; i.first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; i.second &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="B-芽芽的跳棋"><a href="#B-芽芽的跳棋" class="headerlink" title="B. 芽芽的跳棋"></a>B. 芽芽的跳棋</h1><p>$100/100$</p>
<h2 id="想法-1"><a href="#想法-1" class="headerlink" title="想法"></a>想法</h2><p>模擬題。注意移動只能移一次。</p>
<h2 id="CODE-1"><a href="#CODE-1" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">0</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只能一直跳或移動一步</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 往左</span></span><br><span class="line">        <span class="type">int</span> left_step = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> l = i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (l - <span class="number">2</span> &gt;= <span class="number">0</span> &amp;&amp; a[l - <span class="number">1</span>] == <span class="number">1</span> &amp;&amp; a[l - <span class="number">2</span>] == <span class="number">0</span>) &#123; <span class="comment">// 一直跳</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (l - <span class="number">2</span> &gt;= <span class="number">0</span> &amp;&amp; a[l - <span class="number">1</span>] == <span class="number">1</span> &amp;&amp; a[l - <span class="number">2</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">                    l -= <span class="number">2</span>;</span><br><span class="line">                    left_step++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (l - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[l - <span class="number">1</span>] == <span class="number">0</span>) &#123; <span class="comment">// 移動一步</span></span><br><span class="line">            l--;</span><br><span class="line">            left_step++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 往右</span></span><br><span class="line">        <span class="type">int</span> right_step = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> r = i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (r + <span class="number">2</span> &lt; n &amp;&amp; a[r + <span class="number">2</span>] == <span class="number">0</span> &amp;&amp; a[r + <span class="number">1</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (r + <span class="number">2</span> &lt; n &amp;&amp; a[r + <span class="number">2</span>] == <span class="number">0</span> &amp;&amp; a[r + <span class="number">1</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">                    r += <span class="number">2</span>;</span><br><span class="line">                    right_step++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r + <span class="number">1</span> &lt; n &amp;&amp; a[r + <span class="number">1</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">            r++;</span><br><span class="line">            right_step++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="built_in">max</span>(left_step, right_step) &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="C-芽芽打蟑螂"><a href="#C-芽芽打蟑螂" class="headerlink" title="C. 芽芽打蟑螂"></a>C. 芽芽打蟑螂</h1><p>$30/100$</p>
<h2 id="想法-2"><a href="#想法-2" class="headerlink" title="想法"></a>想法</h2><p>沒 AC，如果我AC了再把我的想法更新上來。</p>
<h2 id="CODE-2"><a href="#CODE-2" class="headerlink" title="CODE"></a>CODE</h2><p>NONE</p>
<hr>
<h1 id="D-芽芽與表格"><a href="#D-芽芽與表格" class="headerlink" title="D. 芽芽與表格"></a>D. 芽芽與表格</h1><p>$30/100$</p>
<h2 id="想法-3"><a href="#想法-3" class="headerlink" title="想法"></a>想法</h2><p>同上題</p>
<h2 id="CODE-3"><a href="#CODE-3" class="headerlink" title="CODE"></a>CODE</h2><p>NONE</p>
<hr>
<h1 id="E-大鴨鴨的秩序管理問題"><a href="#E-大鴨鴨的秩序管理問題" class="headerlink" title="E. 大鴨鴨的秩序管理問題"></a>E. 大鴨鴨的秩序管理問題</h1><p>$100/100$</p>
<h2 id="想法-4"><a href="#想法-4" class="headerlink" title="想法"></a>想法</h2><p>可以用快速冪解。</p>
<h2 id="CODE-4"><a href="#CODE-4" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">exp</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (y % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">exp</span>(x, y - <span class="number">1</span>, p) % p) * x % p;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="built_in">exp</span>(x, y / <span class="number">2</span>, p) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">return</span> t * t % <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">        <span class="type">int</span> l, r, k;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i++) &#123;</span><br><span class="line">            ans += <span class="built_in">exp</span>(a[i], k, <span class="number">10</span>);</span><br><span class="line">            ans %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; ans % <span class="number">10</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      <categories>
        <category>資訊</category>
      </categories>
      <tags>
        <tag>資訊之芽</tag>
      </tags>
  </entry>
  <entry>
    <title>高二第二次期考進度</title>
    <url>/0cy/4-17%E9%80%B2%E5%BA%A6/</url>
    <content><![CDATA[<h1 id="4-17-心情-☹️"><a href="#4-17-心情-☹️" class="headerlink" title="4 / 17 (心情 : ☹️)"></a>4 / 17 (心情 : ☹️)</h1><h2 id="數學"><a href="#數學" class="headerlink" title="數學"></a>數學</h2><ul>
<li>對話式 3-1 改 + 訂正 $\frac{2}{3}$。</li>
<li>互動式 2-2 綜合練習 <strong>進階 + 歷屆</strong> 寫完 + 改完 + 訂正完。</li>
</ul>
<h2 id="英文"><a href="#英文" class="headerlink" title="英文"></a>英文</h2><ul>
<li>常春藤 3 篇文章。<ul>
<li>~然後考試燒雞~</li>
</ul>
</li>
<li>常春藤忘記書名閱測 (7/40)。</li>
<li>英文滿級分攻略 - 克漏字篇 (41/100)。</li>
<li>L6 課文單字。</li>
</ul>
<h2 id="化學"><a href="#化學" class="headerlink" title="化學"></a>化學</h2><ul>
<li>初學 <strong>混成軌域</strong>。</li>
</ul>
<h2 id="物理"><a href="#物理" class="headerlink" title="物理"></a>物理</h2><ul>
<li>初學 <strong>功、功率</strong>。<ul>
<li><del>好像不是初學</del></li>
</ul>
</li>
</ul>
<h2 id="資訊"><a href="#資訊" class="headerlink" title="資訊"></a>資訊</h2><p>資芽算法班 上機bonus $\times1$ (2400/2400)。</p>
<h2 id="荒野亂鬥"><a href="#荒野亂鬥" class="headerlink" title="荒野亂鬥"></a>荒野亂鬥</h2><p><strong>塔拉 </strong>爬到 1000 杯 (92x -&gt; 1005)。</p>
<hr>
<h1 id="4-18-心情-☹️"><a href="#4-18-心情-☹️" class="headerlink" title="4 / 18 (心情 : ☹️)"></a>4 / 18 (心情 : ☹️)</h1><h2 id="數學-1"><a href="#數學-1" class="headerlink" title="數學"></a>數學</h2><p>得知要收習作 </p>
<ul>
<li></li>
<li>英文滿級分攻略 - 克漏字篇 (42/100)。</li>
<li>7000單 LV4 <ul>
<li>U3 (27/50)</li>
<li>U4 (17/50)</li>
</ul>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>探究實驗燒雞。</p>
<h2 id="資訊-1"><a href="#資訊-1" class="headerlink" title="資訊"></a>資訊</h2><p>資芽算法班 手寫作業</p>
<p>洛谷 P3916。</p>
<h2 id="荒野亂鬥-1"><a href="#荒野亂鬥-1" class="headerlink" title="荒野亂鬥"></a>荒野亂鬥</h2><ul>
<li>BUZZ 1006</li>
<li>MAISIE 1009</li>
<li>LEON 1007</li>
</ul>
<h1 id="4-19-amp-4-20-心情-☹️"><a href="#4-19-amp-4-20-心情-☹️" class="headerlink" title="4 / 19 &amp; 4 / 20 (心情 : ☹️)"></a>4 / 19 &amp; 4 / 20 (心情 : ☹️)</h1><h2 id="數學-2"><a href="#數學-2" class="headerlink" title="數學"></a>數學</h2><ul>
<li><p>互動式抄完一坤單元了。</p>
</li>
<li><p>還有我買的徐式數學到了，希望不會被嗆。</p>
<ul>
<li><del>其實我之前有買，但我買到簡單版的了QQ</del></li>
</ul>
</li>
</ul>
<h2 id="英文-1"><a href="#英文-1" class="headerlink" title="英文"></a>英文</h2><ul>
<li>弄補習班的東西。</li>
</ul>
<h2 id="化學-1"><a href="#化學-1" class="headerlink" title="化學"></a>化學</h2><ul>
<li>弄學校的作業。</li>
</ul>
<h2 id="物理-1"><a href="#物理-1" class="headerlink" title="物理"></a>物理</h2><ul>
<li>把 super 講義 3-1 的基礎題寫完。</li>
</ul>
<h2 id="資訊-2"><a href="#資訊-2" class="headerlink" title="資訊"></a>資訊</h2><ul>
<li><p>打了兩場比賽，一場洛谷的一場 AtCoder 的</p>
<ul>
<li>ABC pD 是數學題，不會寫燒雞，掉大分了😫。</li>
</ul>
</li>
<li><p>資芽算法班 上機剩 bonus。</p>
</li>
<li>洛谷寫了一些題</li>
</ul>
<h2 id="荒野亂鬥-2"><a href="#荒野亂鬥-2" class="headerlink" title="荒野亂鬥"></a>荒野亂鬥</h2><p>打了好幾隻到 1000 杯。</p>
]]></content>
      <categories>
        <category>紀錄</category>
      </categories>
      <tags>
        <tag>進度</tag>
      </tags>
  </entry>
</search>
