<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sprout-algo-w4</title>
      <link href="/0cy/sprout-algo-w4/"/>
      <url>/0cy/sprout-algo-w4/</url>
      
        <content type="html"><![CDATA[<h1 id="課程內容"><a href="#課程內容" class="headerlink" title="課程內容"></a>課程內容</h1><h2 id="枚舉-Enumeration"><a href="#枚舉-Enumeration" class="headerlink" title="枚舉 Enumeration"></a>枚舉 Enumeration</h2><ul><li>枚舉排列 Enumerate Permutation</li><li>枚舉子集 Enumerate Subset<ul><li>位元枚舉 Bitmask Enumeration</li></ul></li></ul><h2 id="搜尋-Search"><a href="#搜尋-Search" class="headerlink" title="搜尋 Search"></a>搜尋 Search</h2><ul><li><p>DFS &amp; BFS</p></li><li><p>跌代加深的深度優先搜尋 Iterative Deepening Depth-First Search，簡稱 IDDFS</p></li><li><p>雙向廣度優先搜尋 Bi-directional BFS</p></li><li><p>剪枝 Pruning</p><ul><li><p><a href="https://cses.fi/problemset/task/1624">Chessboard and Queens</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 紀錄第 i 行的皇后放置在哪一個座標 (i, y[i])</span></span><br><span class="line"><span class="type">int</span> x[<span class="number">10</span>]; </span><br><span class="line"><span class="type">int</span> y[<span class="number">10</span>]; </span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> col[<span class="number">15</span>]; <span class="comment">// 某一列 j 是否已經放置過皇后</span></span><br><span class="line"><span class="type">bool</span> diag1[<span class="number">15</span>]; <span class="comment">// 左上到右下對角線是否有皇后</span></span><br><span class="line"><span class="type">bool</span> diag2[<span class="number">15</span>]; <span class="comment">// 右上到左下對角線是否有皇后</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">8</span>) &#123;</span><br><span class="line">ans++;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">8</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;.&#x27;</span> &amp;&amp; col[j] == <span class="literal">false</span> &amp;&amp; diag1[i + j] == <span class="literal">false</span> &amp;&amp; diag2[i - j + <span class="number">7</span>] == <span class="literal">false</span>) &#123;</span><br><span class="line">x[i] = i, y[i] = j;</span><br><span class="line">col[j] = diag1[i + j] = diag2[i - j + <span class="number">7</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">dfs</span>(i + <span class="number">1</span>);</span><br><span class="line">col[j] = diag1[i + j] = diag2[i - j + <span class="number">7</span>] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">8</span>; j++) &#123;</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><a href="https://cses.fi/problemset/task/1625">Grid Paths</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line">string path;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">char</span> dir[<span class="number">4</span>] = &#123; <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;L&#x27;</span> &#125;;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> v[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">48</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">7</span> &amp;&amp; y == <span class="number">1</span>) &#123;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">7</span> &amp;&amp; y == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((v[x - <span class="number">1</span>][y] &amp;&amp; v[x + <span class="number">1</span>][y]) &amp;&amp; (!v[x][y - <span class="number">1</span>] &amp;&amp; !v[x][y + <span class="number">1</span>])) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ((!v[x - <span class="number">1</span>][y] &amp;&amp; !v[x + <span class="number">1</span>][y]) &amp;&amp; (v[x][y - <span class="number">1</span>] &amp;&amp; v[x][y + <span class="number">1</span>])) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v[x][y] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (path[i] != <span class="string">&#x27;?&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> d = <span class="number">0</span>; d &lt; <span class="number">4</span>; d++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (path[i] == dir[d]) &#123;</span><br><span class="line">                <span class="type">int</span> nx = x + dx[d], ny = y + dy[d];</span><br><span class="line">                <span class="keyword">if</span> (!v[nx][ny]) &#123;</span><br><span class="line">                    <span class="built_in">dfs</span>(nx, ny, i + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> d = <span class="number">0</span>; d &lt; <span class="number">4</span>; d++) &#123;</span><br><span class="line">            <span class="type">int</span> nx = x + dx[d], ny = y + dy[d];</span><br><span class="line">            <span class="keyword">if</span> (!v[nx][ny]) &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(nx, ny, i + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    v[x][y] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; path;</span><br><span class="line"><span class="built_in">memset</span>(v, <span class="literal">false</span>, <span class="built_in">sizeof</span>(v));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">        v[<span class="number">0</span>][i] = v[<span class="number">8</span>][i] = v[i][<span class="number">0</span>] = v[i][<span class="number">8</span>] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">1</span>][<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>二分搜 Binary Search</p></li><li><p>三分搜 Ternary Search</p></li></ul><hr><h1 id="上機作業"><a href="#上機作業" class="headerlink" title="上機作業"></a>上機作業</h1><p>$2260 / 2400$</p><h2 id="pA-500-500"><a href="#pA-500-500" class="headerlink" title="pA 500 / 500"></a>pA 500 / 500</h2><p>模擬 + 回溯。</p><h2 id="pB-500-500"><a href="#pB-500-500" class="headerlink" title="pB 500 / 500"></a>pB 500 / 500</h2><p>枚舉組合。</p><h2 id="pC-500-500"><a href="#pC-500-500" class="headerlink" title="pC 500 / 500"></a>pC 500 / 500</h2><p>二分搜找訓練天數後用貪心去 check。</p><h2 id="pD-500-500"><a href="#pD-500-500" class="headerlink" title="pD 500 / 500"></a>pD 500 / 500</h2><p>三分搜裸題。</p><h2 id="pE-060-200"><a href="#pE-060-200" class="headerlink" title="pE 060 / 200"></a>pE 060 / 200</h2><p>二分搜找破關所需的最短時間，但我不知怎麼求跑的距離QQ。</p><h2 id="pF-200-200"><a href="#pF-200-200" class="headerlink" title="pF 200 / 200"></a>pF 200 / 200</h2><p>二分搜找工作量上限後用貪心去 check。</p><hr><h1 id="手寫作業"><a href="#手寫作業" class="headerlink" title="手寫作業"></a>手寫作業</h1><p>等分數出來再更新。</p><hr><h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><p>新學到了三分搜，剪枝和位元枚舉也了解的更透徹，還有我不會寫心得。</p>]]></content>
      
      
      <categories>
          
          <category> 資訊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 資訊之芽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025 入芽考</title>
      <link href="/0cy/%E5%85%A5%E8%8A%BD%E8%80%83%E9%A1%8C%E8%A7%A3/"/>
      <url>/0cy/%E5%85%A5%E8%8A%BD%E8%80%83%E9%A1%8C%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>題目都放在 <a href="https://tioj.sprout.tw/">Sprout Online Judge</a></p><h1 id="A-芽芽來排序"><a href="#A-芽芽來排序" class="headerlink" title="A. 芽芽來排序"></a>A. 芽芽來排序</h1><p>$100/100$</p><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>這題測資小，直接暴力就好ㄌ。</p><h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; b = a;</span><br><span class="line">    <span class="built_in">sort</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a == b) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; result;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != b[i]) &#123;</span><br><span class="line">            <span class="type">int</span> j = i;</span><br><span class="line">            <span class="keyword">for</span> (; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[j] == b[i]) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> tmp = a[i];</span><br><span class="line">            a[i] = a[j];</span><br><span class="line">            a[j] = tmp;</span><br><span class="line">            result.<span class="built_in">push_back</span>(&#123;i, j&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; result.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : result) &#123;</span><br><span class="line">        cout &lt;&lt; i.first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; i.second &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="B-芽芽的跳棋"><a href="#B-芽芽的跳棋" class="headerlink" title="B. 芽芽的跳棋"></a>B. 芽芽的跳棋</h1><p>$100/100$</p><h2 id="想法-1"><a href="#想法-1" class="headerlink" title="想法"></a>想法</h2><p>模擬題。注意移動只能移一次。</p><h2 id="CODE-1"><a href="#CODE-1" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">0</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只能一直跳或移動一步</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 往左</span></span><br><span class="line">        <span class="type">int</span> left_step = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> l = i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (l - <span class="number">2</span> &gt;= <span class="number">0</span> &amp;&amp; a[l - <span class="number">1</span>] == <span class="number">1</span> &amp;&amp; a[l - <span class="number">2</span>] == <span class="number">0</span>) &#123; <span class="comment">// 一直跳</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (l - <span class="number">2</span> &gt;= <span class="number">0</span> &amp;&amp; a[l - <span class="number">1</span>] == <span class="number">1</span> &amp;&amp; a[l - <span class="number">2</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">                    l -= <span class="number">2</span>;</span><br><span class="line">                    left_step++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (l - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[l - <span class="number">1</span>] == <span class="number">0</span>) &#123; <span class="comment">// 移動一步</span></span><br><span class="line">            l--;</span><br><span class="line">            left_step++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 往右</span></span><br><span class="line">        <span class="type">int</span> right_step = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> r = i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (r + <span class="number">2</span> &lt; n &amp;&amp; a[r + <span class="number">2</span>] == <span class="number">0</span> &amp;&amp; a[r + <span class="number">1</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (r + <span class="number">2</span> &lt; n &amp;&amp; a[r + <span class="number">2</span>] == <span class="number">0</span> &amp;&amp; a[r + <span class="number">1</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">                    r += <span class="number">2</span>;</span><br><span class="line">                    right_step++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r + <span class="number">1</span> &lt; n &amp;&amp; a[r + <span class="number">1</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">            r++;</span><br><span class="line">            right_step++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="built_in">max</span>(left_step, right_step) &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="C-芽芽打蟑螂"><a href="#C-芽芽打蟑螂" class="headerlink" title="C. 芽芽打蟑螂"></a>C. 芽芽打蟑螂</h1><p>$30/100$</p><h2 id="想法-2"><a href="#想法-2" class="headerlink" title="想法"></a>想法</h2><p>沒 AC，如果我AC了再把我的想法更新上來。</p><h2 id="CODE-2"><a href="#CODE-2" class="headerlink" title="CODE"></a>CODE</h2><p>NONE</p><hr><h1 id="D-芽芽與表格"><a href="#D-芽芽與表格" class="headerlink" title="D. 芽芽與表格"></a>D. 芽芽與表格</h1><p>$30/100$</p><h2 id="想法-3"><a href="#想法-3" class="headerlink" title="想法"></a>想法</h2><p>同上題</p><h2 id="CODE-3"><a href="#CODE-3" class="headerlink" title="CODE"></a>CODE</h2><p>NONE</p><hr><h1 id="E-大鴨鴨的秩序管理問題"><a href="#E-大鴨鴨的秩序管理問題" class="headerlink" title="E. 大鴨鴨的秩序管理問題"></a>E. 大鴨鴨的秩序管理問題</h1><p>$100/100$</p><h2 id="想法-4"><a href="#想法-4" class="headerlink" title="想法"></a>想法</h2><p>可以用快速冪解。</p><h2 id="CODE-4"><a href="#CODE-4" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">exp</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (y % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">exp</span>(x, y - <span class="number">1</span>, p) % p) * x % p;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="built_in">exp</span>(x, y / <span class="number">2</span>, p) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">return</span> t * t % <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">        <span class="type">int</span> l, r, k;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i++) &#123;</span><br><span class="line">            ans += <span class="built_in">exp</span>(a[i], k, <span class="number">10</span>);</span><br><span class="line">            ans %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; ans % <span class="number">10</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 資訊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 資訊之芽 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
